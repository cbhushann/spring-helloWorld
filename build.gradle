import com.github.spotbugs.snom.SpotBugsTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
	id 'jacoco'
	id 'com.github.spotbugs' version '5.2.5'
	id 'org.owasp.dependencycheck' version '8.4.0'
	id "org.sonarqube" version "4.4.1.3373"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

checkstyle {
	toolVersion = '10.12.1'
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
	showViolations = true
}

tasks.withType(Checkstyle).configureEach {
	reports {
		xml.required = true
		html.required = true
	}
}

tasks.test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
	reports {
		junitXml.required = true
		html.required = true
	}
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
}

apply plugin: 'com.github.spotbugs'

spotbugs {
	toolVersion = '4.7.3'
	effort = 'max'
	reportLevel = 'low'
}

tasks.withType(SpotBugsTask).configureEach {
	reports {
		html.required = true
		xml.required = false
		html.outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
	}
}

//tasks.withType(JavaCompile).configureEach {
//	sourceCompatibility = '17'
//	targetCompatibility = '17'
//}

dependencyCheck {
	failBuildOnCVSS = 7.0
	suppressionFile = "dependency-check-suppressions.xml"
	analyzers.assemblyEnabled = false
	formats = ['HTML']
	outputDirectory = layout.buildDirectory.dir("reports/dependency-check")
}
